{
    "swagger": "2.0",
    "info": {
        "description": "Test task. Demo service with Kafka, PostgreSQL, cache",
        "title": "WB L0 API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8081",
    "basePath": "/",
    "paths": {
        "/order/{order_uid}": {
            "get": {
                "description": "Get order details by order UID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get order by UID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order UID",
                        "name": "order_uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details",
                        "schema": {
                            "$ref": "#/definitions/domain.Order"
                        }
                    },
                    "400": {
                        "description": "Invalid order UID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Delivery": {
            "type": "object",
            "required": [
                "address",
                "city",
                "email",
                "name",
                "phone",
                "region",
                "zip"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                }
            }
        },
        "domain.Item": {
            "type": "object",
            "required": [
                "brand",
                "chrt_id",
                "name",
                "nm_id",
                "price",
                "rid",
                "size",
                "status",
                "total_price",
                "track_number"
            ],
            "properties": {
                "brand": {
                    "type": "string"
                },
                "chrt_id": {
                    "type": "integer",
                    "minimum": 0
                },
                "name": {
                    "type": "string"
                },
                "nm_id": {
                    "type": "integer",
                    "minimum": 0
                },
                "price": {
                    "type": "number"
                },
                "rid": {
                    "type": "string"
                },
                "sale": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 0
                },
                "size": {
                    "type": "string"
                },
                "status": {
                    "type": "integer",
                    "minimum": 0
                },
                "total_price": {
                    "type": "number"
                },
                "track_number": {
                    "type": "string"
                }
            }
        },
        "domain.Order": {
            "description": "Order information",
            "type": "object",
            "required": [
                "customer_id",
                "date_created",
                "delivery",
                "delivery_service",
                "entry",
                "items",
                "locale",
                "oof_shard",
                "order_uid",
                "payment",
                "shardkey",
                "sm_id",
                "track_number"
            ],
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                },
                "delivery": {
                    "$ref": "#/definitions/domain.Delivery"
                },
                "delivery_service": {
                    "type": "string"
                },
                "entry": {
                    "type": "string"
                },
                "internal_signature": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/domain.Item"
                    }
                },
                "locale": {
                    "type": "string"
                },
                "oof_shard": {
                    "type": "string"
                },
                "order_uid": {
                    "type": "string"
                },
                "payment": {
                    "$ref": "#/definitions/domain.Payment"
                },
                "shardkey": {
                    "type": "string"
                },
                "sm_id": {
                    "type": "integer",
                    "minimum": 0
                },
                "track_number": {
                    "type": "string"
                }
            }
        },
        "domain.Payment": {
            "type": "object",
            "required": [
                "amount",
                "bank",
                "currency",
                "delivery_cost",
                "goods_total",
                "payment_dt",
                "provider",
                "transaction"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "bank": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "custom_fee": {
                    "type": "integer",
                    "minimum": 0
                },
                "delivery_cost": {
                    "type": "number"
                },
                "goods_total": {
                    "type": "integer",
                    "minimum": 0
                },
                "payment_dt": {
                    "type": "integer",
                    "minimum": 0
                },
                "provider": {
                    "type": "string"
                },
                "request_id": {
                    "type": "string"
                },
                "transaction": {
                    "type": "string"
                }
            }
        },
        "handlers.ErrorResponse": {
            "description": "Error response structure",
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 404
                },
                "error": {
                    "type": "string",
                    "example": "order not found"
                },
                "message": {
                    "type": "string",
                    "example": "The requested order was not found"
                }
            }
        }
    }
}